//this illustrates how ships take damage from (normal) weapons
//(weapons damaging shields or apssing armor etc... have to done by skipping
//parts or changing other volumes)
//The following will be accessed over the ship class
    //Attack needs: (maybe this things are just passed by a function because 
    //damage affects multiple tiles/hexes
        //unsigned short int damage
        //unsigned short int direction 
            //(just a integer determinating how the shoot will hit the modules)
        //float shield_piercing 
            //how strongly the weapon is affected by shields 0 means not affected
            //1 means normal; >0 makes the weapon bad in penetrating shields
        //float armor_piercing
            //just like shield_piercing but against
        //float damage_to_shield
            //How strongly the weapon affects shields 0 not at all; 1 normal
            // >1 good against shields
        //float damage_to_hull_integtity
            //same as damage_to_shield should be small other wise ships will
            //explode fast (have unsigned short int hull integrity so 
            //65535/150 = 436.9 so the biggest shipwould be blown up by 
            //~300 shots. So this value should be set to 0.1 or 0.01...
        //float damage_to_energy
            //same as damage_to_shield
        //damage_to_module[i]
            //how storngly modules of a type are affected 
        //...........
    //Shields needs:
        //unsigned short int shield_absolut_reduction highest online shield counts
        //unsigend long int shield_points
        //unsigend long int shield_points_max
        //float  shield_hardness
    //Armor needs:
        //unsigned short int armor_absolut_reduction
        //float armor_hardness
    //Ship needs:
        //unsigned short int hull_integrity
        //unsigned short int crew
        //unsigned short int energy
        //.........
    //Modules could be armored..... here they will get damage by their own function

void (class & ship, class attack)
    {
    if (shield_points > 0 || (shield_piercing == 0))//skipped if shields are offline
        {
        if (damage <= shield_absolut_reduction)
            {
            //The ship will not take damage because the damage is to low
            return;
            }
        else
            {
            damage = damage - shield_absolut_reduction;
            unsigned short int damage_shield = damage;
            float leak = (shield_points * shield_hardness /shield_points_max)*shield_piercing;
            if (leak >= 1)
                {
                damage = 0;
                }
            else
                {
                //round function here
                damage = leak * damage;
                }
            if(shield_points > damage_shield * damage_to_shield)
                {
                shield_points = shield_points - damage_shield * damage_to shield;
                }
            else
                {
                shield_points = 0;
                }
            }
        }
    else
        {
        }
    //end of shield part
    if (damage < armor_absolut_reduction || (armor_piercing == 0)
        {
        //because the damage can not penetrate the armor we are done here
        return;
        }
    else
        {
        damage = damage - armor_absolut_reduction;
        damage = damage * (1 - armor_hardness) * armor_piercing;
        }
    //end of armor part
    hull_integrity = hull_integrity - damage * damage_to_hull_integrity;
    energy = energy - damage * damage_to_energy
    //........
//give damage, direction and damage_to_module[i] to a function that damages
//the modules accordingly
    };
